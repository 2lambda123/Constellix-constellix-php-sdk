name: Code Quality
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'
jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: true
      matrix:
        operating-system: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        php-versions: ['8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Force linux line endings
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, json
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: xdebug
          tools: phpcs, phpstan, phpunit:9.6.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run PHP Codesniffer
        run: phpcs

      - name: Run PHPStan
        run: phpstan

      - name: Run PHPUnit
        run: phpunit